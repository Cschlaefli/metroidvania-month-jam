[gd_scene load_steps=37 format=2]

[ext_resource path="res://player/Player.gd" type="Script" id=1]
[ext_resource path="res://assets/sphere_soft.png" type="Texture" id=2]
[ext_resource path="res://player/PlayerCamera.gd" type="Script" id=3]
[ext_resource path="res://player/ui/SpellDisplay.gd" type="Script" id=4]
[ext_resource path="res://player/ui/ResourceDisplay.gd" type="Script" id=5]
[ext_resource path="res://player/ui/SpellEquipMenu.gd" type="Script" id=6]
[ext_resource path="res://player/Staff.tscn" type="PackedScene" id=7]
[ext_resource path="res://player/spells/Teleport.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/player/model_placeholder.png" type="Texture" id=9]

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0, 0.296296, 1 )
colors = PoolColorArray( 0.0893555, 0, 0.714844, 0.243137, 0.309753, 0.214844, 1, 0.172549, 0.0859375, 0.196625, 1, 0 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="ParticlesMaterial" id=3]
emission_shape = 2
emission_box_extents = Vector3( 10, 64, 1 )
flag_disable_z = true
spread = 10.0
gravity = Vector3( 0, 100, 0 )
initial_velocity = 1000.0
angular_velocity = 1.4013e-44
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 2500.0
scale = 0.1
color_ramp = SubResource( 2 )

[sub_resource type="Gradient" id=4]
colors = PoolColorArray( 0.392157, 0.392157, 0.392157, 0.368627, 0.964706, 0.964706, 0.964706, 0 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )

[sub_resource type="Curve" id=6]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0.5033 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=7]
curve = SubResource( 6 )

[sub_resource type="ParticlesMaterial" id=8]
emission_shape = 2
emission_box_extents = Vector3( 60, 64, 1 )
flag_disable_z = true
spread = 0.0
gravity = Vector3( 0, -4000, 0 )
angular_velocity = 1.05
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale = 0.2
scale_curve = SubResource( 7 )
color_ramp = SubResource( 5 )

[sub_resource type="CapsuleShape2D" id=10]
radius = 64.0
height = 128.0

[sub_resource type="DynamicFontData" id=11]
font_path = "res://assets/cleanwork.ttf"

[sub_resource type="DynamicFont" id=12]
size = 100
font_data = SubResource( 11 )

[sub_resource type="Theme" id=13]
default_font = SubResource( 12 )
Label/colors/font_color = Color( 1, 1, 1, 1 )
Label/colors/font_color_shadow = Color( 0, 0, 0, 0 )
Label/colors/font_outline_modulate = Color( 1, 1, 1, 1 )
Label/constants/line_spacing = 3
Label/constants/shadow_as_outline = 0
Label/constants/shadow_offset_x = 1
Label/constants/shadow_offset_y = 1
Label/fonts/font = null
Label/styles/normal = null

[sub_resource type="ShaderMaterial" id=14]

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0.501961, 0.458824, 0.458824, 0.764706 )
border_blend = true
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10
anti_aliasing_size = 5

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0, 1, 0.133333, 1 )

[sub_resource type="Theme" id=17]
ProgressBar/colors/font_color = Color( 0, 0, 0, 1 )
ProgressBar/colors/font_color_shadow = Color( 0.462745, 0.145098, 0.145098, 1 )
ProgressBar/fonts/font = null
ProgressBar/styles/bg = SubResource( 15 )
ProgressBar/styles/fg = SubResource( 16 )

[sub_resource type="StyleBoxFlat" id=18]
bg_color = Color( 0.592157, 0.0823529, 0, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 0.941176, 0.941176, 0.941176, 0 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=19]
bg_color = Color( 0, 0.262745, 0.666667, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 0.8, 0.8, 0.8, 0 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=20]
bg_color = Color( 0.32549, 1, 0.415686, 0.498039 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 0.8, 0.8, 0.8, 0 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxEmpty" id=21]

[sub_resource type="SpriteFrames" id=9]
animations = [ {
"frames": [  ],
"loop": true,
"name": "default",
"speed": 5.0
}, {
"frames": [ ExtResource( 9 ) ],
"loop": true,
"name": "Idle",
"speed": 5.0
} ]

[sub_resource type="Shader" id=22]
code = "shader_type particles;
uniform float spread;
uniform float flatness;
uniform float initial_linear_velocity;
uniform float initial_angle;
uniform float angular_velocity;
uniform float orbit_velocity;
uniform float linear_accel;
uniform float radial_accel;
uniform float tangent_accel;
uniform float damping;
uniform float scale;
uniform float hue_variation;
uniform float anim_speed;
uniform float anim_offset;
uniform float initial_linear_velocity_random;
uniform float initial_angle_random;
uniform float angular_velocity_random;
uniform float orbit_velocity_random;
uniform float linear_accel_random;
uniform float radial_accel_random;
uniform float tangent_accel_random;
uniform float damping_random;
uniform float scale_random;
uniform float hue_variation_random;
uniform float anim_speed_random;
uniform float anim_offset_random;
uniform vec3 emission_box_extents;
uniform vec4 color_value : hint_color;
uniform int trail_divisor;
uniform vec3 gravity;
uniform sampler2D color_ramp;
uniform sampler2D scale_texture;


float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

void vertex() {
	uint base_number = NUMBER / uint(trail_divisor);
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	float angle_rand = rand_from_seed(alt_seed);
	float scale_rand = rand_from_seed(alt_seed);
	float hue_rot_rand = rand_from_seed(alt_seed);
	float anim_offset_rand = rand_from_seed(alt_seed);
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;

	if (RESTART) {
		float tex_linear_velocity = 0.0;
		float tex_angle = 0.0;
		float tex_anim_offset = 0.0;
		float spread_rad = spread * degree_to_rad;
		float angle1_rad = rand_from_seed_m1_p1(alt_seed) * spread_rad;
		vec3 rot = vec3(cos(angle1_rad), sin(angle1_rad), 0.0);
		VELOCITY = rot * initial_linear_velocity * mix(1.0, rand_from_seed(alt_seed), initial_linear_velocity_random);
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.y = 0.0;
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random);
		TRANSFORM[3].xyz = vec3(rand_from_seed(alt_seed) * 2.0 - 1.0, rand_from_seed(alt_seed) * 2.0 - 1.0, rand_from_seed(alt_seed) * 2.0 - 1.0) * emission_box_extents;
		VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		VELOCITY.z = 0.0;
		TRANSFORM[3].z = 0.0;
	} else {
		CUSTOM.y += DELTA / LIFETIME;
		float tex_linear_velocity = 0.0;
		float tex_orbit_velocity = 0.0;
		float tex_angular_velocity = 0.0;
		float tex_linear_accel = 0.0;
		float tex_radial_accel = 0.0;
		float tex_tangent_accel = 0.0;
		float tex_damping = 0.0;
		float tex_angle = 0.0;
		float tex_anim_speed = 0.0;
		float tex_anim_offset = 0.0;
		vec3 force = gravity;
		vec3 pos = EMISSION_TRANSFORM[3].xyz;
		float p = TRANSFORM[3].x;
		pos.z = 0.0;
		
		force.x = -p *1.5;
		// apply linear acceleration
		force += length(VELOCITY) > 0.0 ? normalize(VELOCITY) * (linear_accel + tex_linear_accel) * mix(1.0, rand_from_seed(alt_seed), linear_accel_random) : vec3(0.0);
		// apply radial acceleration
		vec3 org = EMISSION_TRANSFORM[3].xyz;
		vec3 diff = pos - org;
		force += length(diff) > 0.0 ? normalize(diff) * (radial_accel + tex_radial_accel) * mix(1.0, rand_from_seed(alt_seed), radial_accel_random) : vec3(0.0);
		// apply tangential acceleration;
		force += length(diff.yx) > 0.0 ? vec3(normalize(diff.yx * vec2(-1.0, 1.0)), 0.0) * ((tangent_accel + tex_tangent_accel) * mix(1.0, rand_from_seed(alt_seed), tangent_accel_random)) : vec3(0.0);
		// apply attractor forces
		VELOCITY += force * DELTA;
		// orbit velocity
		float orbit_amount = (orbit_velocity + tex_orbit_velocity) * mix(1.0, rand_from_seed(alt_seed), orbit_velocity_random);
		if (orbit_amount != 0.0) {
		     float ang = orbit_amount * DELTA * pi * 2.0;
		     mat2 rot = mat2(vec2(cos(ang), -sin(ang)), vec2(sin(ang), cos(ang)));
		     TRANSFORM[3].xy -= diff.xy;
		     TRANSFORM[3].xy += rot * diff.xy;
		}
		if (damping + tex_damping > 0.0) {
			float v = length(VELOCITY);
			float damp = (damping + tex_damping) * mix(1.0, rand_from_seed(alt_seed), damping_random);
			v -= damp * DELTA;
			if (v < 0.0) {
				VELOCITY = vec3(0.0);
			} else {
				VELOCITY = normalize(VELOCITY) * v;
			}
		}
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		base_angle += CUSTOM.y * LIFETIME * (angular_velocity + tex_angular_velocity) * mix(1.0, rand_from_seed(alt_seed) * 2.0 - 1.0, angular_velocity_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random) + CUSTOM.y * (anim_speed + tex_anim_speed) * mix(1.0, rand_from_seed(alt_seed), anim_speed_random);
	}
	float tex_scale = textureLod(scale_texture, vec2(CUSTOM.y, 0.0), 0.0).r;
	float tex_hue_variation = 0.0;
	float hue_rot_angle = (hue_variation + tex_hue_variation) * pi * 2.0 * mix(1.0, hue_rot_rand * 2.0 - 1.0, hue_variation_random);
	float hue_rot_c = cos(hue_rot_angle);
	float hue_rot_s = sin(hue_rot_angle);
	mat4 hue_rot_mat = mat4(vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.000, 0.000, 0.000, 1.0)) +
		mat4(vec4(0.701, -0.587, -0.114, 0.0),
			vec4(-0.299, 0.413, -0.114, 0.0),
			vec4(-0.300, -0.588, 0.886, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_c +
		mat4(vec4(0.168, 0.330, -0.497, 0.0),
			vec4(-0.328, 0.035,  0.292, 0.0),
			vec4(1.250, -1.050, -0.203, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_s;
	COLOR = hue_rot_mat * textureLod(color_ramp, vec2(CUSTOM.y, 0.0), 0.0);

	TRANSFORM[0] = vec4(cos(CUSTOM.x), -sin(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[1] = vec4(sin(CUSTOM.x), cos(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[2] = vec4(0.0, 0.0, 1.0, 0.0);
	float base_scale = mix(scale * tex_scale, 1.0, scale_random * scale_rand);
	if (base_scale == 0.0) {
		base_scale = 0.000001;
	}
	TRANSFORM[0].xyz *= base_scale;
	TRANSFORM[1].xyz *= base_scale;
	TRANSFORM[2].xyz *= base_scale;
	VELOCITY.z = 0.0;
	TRANSFORM[3].z = 0.0;
}

"

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0, 0.604651, 1 )
colors = PoolColorArray( 0, 0.835294, 1, 0, 0.0666667, 0.427451, 1, 0.145098, 0.133333, 0, 1, 0 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="Curve" id=25]
_data = [ Vector2( 0, 0.2415 ), 0.0, 0.0, 0, 0, Vector2( 0.5, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.981771, 0.2767 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=26]
curve = SubResource( 25 )

[sub_resource type="ShaderMaterial" id=27]
shader = SubResource( 22 )
shader_param/spread = 0.0
shader_param/flatness = 0.0
shader_param/initial_linear_velocity = 0.0
shader_param/initial_angle = 0.0
shader_param/angular_velocity = null
shader_param/orbit_velocity = 0.0
shader_param/linear_accel = 0.0
shader_param/radial_accel = 0.0
shader_param/tangent_accel = 0.0
shader_param/damping = 100.0
shader_param/scale = 0.15
shader_param/hue_variation = 0.0
shader_param/anim_speed = 0.0
shader_param/anim_offset = 0.0
shader_param/initial_linear_velocity_random = 0.0
shader_param/initial_angle_random = 0.0
shader_param/angular_velocity_random = 0.0
shader_param/orbit_velocity_random = 0.0
shader_param/linear_accel_random = 0.0
shader_param/radial_accel_random = 0.0
shader_param/tangent_accel_random = 0.0
shader_param/damping_random = 1.0
shader_param/scale_random = 0.0
shader_param/hue_variation_random = 0.0
shader_param/anim_speed_random = 0.0
shader_param/anim_offset_random = 0.0
shader_param/emission_box_extents = Vector3( 100, 20, 1 )
shader_param/color_value = Color( 0, 0.133333, 1, 1 )
shader_param/trail_divisor = 1
shader_param/gravity = Vector3( 0, -500, 0 )
shader_param/color_ramp = SubResource( 24 )
shader_param/scale_texture = SubResource( 26 )

[node name="Player" type="KinematicBody2D"]
collision_layer = 2
collision_mask = 9
script = ExtResource( 1 )

[node name="DoubleJumpEffect" type="Particles2D" parent="."]
position = Vector2( 0, 128 )
rotation = 1.5708
emitting = false
amount = 50
one_shot = true
explosiveness = 1.0
local_coords = false
process_material = SubResource( 3 )
texture = ExtResource( 2 )

[node name="RunEffect" type="Particles2D" parent="."]
emitting = false
amount = 50
lifetime = 0.3
local_coords = false
process_material = SubResource( 8 )
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 10 )

[node name="Camera2D" type="Camera2D" parent="."]
pause_mode = 2
current = true
zoom = Vector2( 5, 5 )
process_mode = 0
limit_smoothed = true
smoothing_enabled = true
smoothing_speed = 12.0
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
script = ExtResource( 3 )

[node name="SoftLockPreventer" type="Timer" parent="Camera2D"]
pause_mode = 2
process_mode = 0
wait_time = 4.0
one_shot = true

[node name="CayoteTimer" type="Timer" parent="."]
process_mode = 0
wait_time = 0.1
one_shot = true

[node name="StateLabel" type="Label" parent="."]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -93.1023
margin_top = -250.415
margin_right = 101.898
margin_bottom = -138.415
theme = SubResource( 13 )
text = "Idle"

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="SpellDisplay" type="Node2D" parent="CanvasLayer"]
material = SubResource( 14 )
position = Vector2( 30, 80 )
scale = Vector2( 0.5, 0.5 )
script = ExtResource( 4 )

[node name="ResourceDisplay" type="Control" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 5 )

[node name="HealthBar" type="ProgressBar" parent="CanvasLayer/ResourceDisplay"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -512.0
margin_right = -112.0
margin_bottom = 32.0
theme = SubResource( 17 )
custom_styles/fg = SubResource( 18 )
max_value = 10.0
value = 10.0
percent_visible = false

[node name="ManaBar" type="ProgressBar" parent="CanvasLayer/ResourceDisplay"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -512.0
margin_top = 32.0
margin_right = -112.0
margin_bottom = 64.0
theme = SubResource( 17 )
custom_styles/fg = SubResource( 19 )
max_value = 10.0
value = 10.0
percent_visible = false

[node name="ExcessBar" type="ProgressBar" parent="CanvasLayer/ResourceDisplay"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -512.0
margin_top = 32.0
margin_right = -112.0
margin_bottom = 64.0
theme = SubResource( 17 )
custom_styles/fg = SubResource( 20 )
custom_styles/bg = SubResource( 21 )
max_value = 20.0
percent_visible = false

[node name="SpellEquipMenu" type="Control" parent="CanvasLayer"]
pause_mode = 2
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 6 )

[node name="Spells" type="HBoxContainer" parent="CanvasLayer/SpellEquipMenu"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -145.0
margin_top = -20.0
margin_right = 145.0
margin_bottom = 40.0
alignment = 1

[node name="Staff" parent="." instance=ExtResource( 7 )]

[node name="CastingTimer" type="Timer" parent="."]
process_mode = 0
one_shot = true

[node name="RecoveryTimer" type="Timer" parent="."]
process_mode = 0
one_shot = true

[node name="HitstunTimer" type="Timer" parent="."]
process_mode = 0
wait_time = 0.1
one_shot = true

[node name="IdleTimer" type="Timer" parent="."]
process_mode = 0
wait_time = 1.5
one_shot = true

[node name="SpellList" type="Node2D" parent="."]

[node name="Teleport" parent="." instance=ExtResource( 8 )]

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = SubResource( 9 )
animation = "Idle"

[node name="RegenParticles" type="Particles2D" parent="."]
position = Vector2( 0, 128 )
amount = 90
process_material = SubResource( 27 )
texture = ExtResource( 2 )

[connection signal="resources_changed" from="." to="CanvasLayer/ResourceDisplay" method="_on_resource_change"]
[connection signal="spell_list_changed" from="." to="CanvasLayer/SpellDisplay" method="update_list"]
[connection signal="timeout" from="CastingTimer" to="." method="_end_cast"]
[connection signal="timeout" from="RecoveryTimer" to="." method="_end_recovery"]
[connection signal="timeout" from="HitstunTimer" to="." method="_on_HitstunTimer_timeout"]

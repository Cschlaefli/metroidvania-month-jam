[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform sampler2D gradient;

void fragment(){
	float period = .2;
	float amp = 1.0;
	float t = TIME *.25;

	float v = texture(noise,SCREEN_UV + TIME*.0).g + t;
	if(v > 1.0){
		v = mod(v, amp);
	}
	COLOR = texture(gradient, vec2(v));
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.00414938, 0.215768, 0.381743, 0.576764, 0.721992, 0.904564, 1 )
colors = PoolColorArray( 0.321229, 0.0109406, 0.466797, 1, 0.0356369, 0.26705, 0.337891, 1, 0.0138702, 0.189331, 0.394531, 1, 0.464844, 0.0453949, 0.0453949, 1, 0, 0.713349, 0.730469, 1, 0.106435, 0.0592957, 0.523438, 1, 0.53125, 0, 0, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
octaves = 8
period = 32.0
persistence = 0.25
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[resource]
shader = SubResource( 1 )
shader_param/noise = SubResource( 5 )
shader_param/gradient = SubResource( 3 )
